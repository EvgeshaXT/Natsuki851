import disnake
from disnake.ext import commands
from disnake.ext.commands import MissingPermissions
from disnake import Option, OptionType

class ClearCog(commands.Cog):
    """–ú–æ–¥—É–ª—å, –¥–æ–±–∞–≤–ª—è—é—â–∏–π —Å–ª–µ—à-–∫–æ–º–∞–Ω–¥—É –æ—á–∏—Å—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –∫–∞–Ω–∞–ª–µ"""
    def __init__(self, bot):
        self.bot = bot

    # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Ñ–æ—Ä–º—ã —Å–ª–æ–≤–∞
    def get_message_word(self, count):
        # 1, 21, 31, 41, 51...
        if count % 10 == 1 and count % 100 != 11:
            return "—Å–æ–æ–±—â–µ–Ω–∏–µ"
        
        # 2, 3, 4, 22, 23...
        elif count % 10 in [2, 3, 4] and count % 100 not in [12, 13, 14]:
            return "—Å–æ–æ–±—â–µ–Ω–∏—è"
        
        # –û—Å—Ç–∞–ª—å–Ω—ã–µ —Å–ª—É—á–∞–∏
        else:
            return "—Å–æ–æ–±—â–µ–Ω–∏–π"

    # –û—Ç–¥–µ–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–∫–∏ –ø—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    @commands.Cog.listener()
    async def on_slash_command_error(self, inter: disnake.ApplicationCommandInteraction, error):
        if isinstance(error, MissingPermissions):
            await inter.response.send_message("> –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã ‚ùå")
        else:
            # –ü–µ—Ä–µ–¥–∞—ë–º –¥—Ä—É–≥–∏–µ –æ—à–∏–±–∫–∏ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
            raise error

    # –°–æ–∑–¥–∞—ë–º —Å–ª–µ—à-–∫–æ–º–∞–Ω–¥—É
    @commands.has_permissions(administrator=True)
    @commands.slash_command(
        name="clear",
        description="–£–¥–∞–ª–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç–µ",
        # –î–æ–±–∞–≤–ª—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å–æ–æ–±—â–µ–Ω–∏–π, –∫–æ—Ç–æ—Ä—ã—Ö –Ω—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å
        options=[
            Option(
                name="number_of_messages",
                description="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è (1 - 100)",
                type=OptionType.integer,
                required=True, # –î–µ–ª–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–º
                min_value=1,
                max_value=100
            )
        ]
    )

    # inter - –∞–Ω–∞–ª–æ–≥ ctx –≤ –ø—Ä–µ—Ñ–∏–∫—Å–Ω—ã—Ö –∫–æ–º–∞–Ω–¥–∞—Ö
    async def clear(
        self,
        inter: disnake.ApplicationCommandInteraction,
        number_of_messages: int
    ):
        try:
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç
            await inter.response.send_message("–£–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π ...")

            # –ü–æ–ª—É—á–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –µ–≥–æ –≤ –∏—Å–∫–ª—é—á–µ–Ω–∏—è –∏–∑ —É–¥–∞–ª–µ–Ω–∏—è
            bot_message = await inter.original_response()
            # –î–ª—è —ç—Ç–æ–≥–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º check —Ñ—É–Ω–∫—Ü–∏—é
            def check(message):
                return message.id != bot_message.id

            # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è
            deleted = await inter.channel.purge(
                limit=number_of_messages,
                check=check,
                before=bot_message
            )

            count = len(deleted)
            word_form = self.get_message_word(count)
        
            # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –±—ã–ª–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Ä–∞–Ω–µ–µ
            await inter.edit_original_response(f"```ansi\n[2;34m{count}[0m {word_form} –±—ã–ª–æ —É–¥–∞–ª–µ–Ω–æ.```", delete_after=3) # –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è ansi, —á—Ç–æ–±—ã —Å–¥–µ–ª–∞—Ç—å —Ñ—Ä–∞–≥–º–µ–Ω—Ç —Ç–µ–∫—Å—Ç–∞ —Ü–≤–µ—Ç–Ω—ã–º

        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±—â–∏—Ö HTTP-–æ—à–∏–±–æ–∫ —Å–æ —Å—Ç–æ—Ä–æ–Ω—ã Discord API
        except disnake.HTTPException as error:
            await inter.edit_original_response(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π (–∫–æ–¥: {error.status}).")
            print(f"‚ùå cogs/clear.py: HTTP –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π: –∫–æ–¥ {error.status}) - {error}")

        # –û–±—â–∏–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω—ã—Ö –æ—à–∏–±–æ–∫
        except Exception as error:
            await inter.edit_original_response("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π.")
            print(f"‚ùå cogs/clear.py: –ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è: {error}")

        
def setup(bot):
    bot.add_cog(ClearCog(bot))